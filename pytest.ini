[tool:pytest]
# Pytest configuration for Sacred Geometry AAR Processor

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async testing configuration
asyncio_mode = auto

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    e2e: End-to-end tests for full system workflows
    slow: Tests that take longer to run
    database: Tests that require database setup
    monitoring: Tests that involve monitoring systems
    sacred_geometry: Tests specific to Sacred Geometry patterns
    compliance: Tests for compliance checking functionality
    api: Tests for FastAPI endpoints
    concurrent: Tests for concurrent processing
    performance: Performance and load testing
    error_handling: Tests for error conditions and recovery

# Coverage configuration
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10

# Minimum Python version
minversion = 3.8

# Test output
console_output_style = progress
junit_family = xunit2

# Timeout for individual tests (in seconds)
timeout = 300

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:aiohttp.*

# Test environment variables
env =
    TESTING = true
    DATABASE_URL = sqlite:///test.db
    LOG_LEVEL = DEBUG
    SACRED_GEOMETRY_STRICT_MODE = true
